import React, { useState, useEffect, useRef } from 'react';
import Header from '../../components/layout/Header';
import Footer from '../../components/layout/Footer';
import { getTeachers } from '../../services/teacherService';
import '../../App.css';
import './css/teacher.css';

const TeacherIntroduction = () => {
    const [teachers, setTeachers] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [statistics, setStatistics] = useState({});
    const gridRef = useRef(null);

    const API_BASE_URL = import.meta.env.VITE_API_URL || 'http://127.0.0.1:5000';

    // Fetch teachers data theo API pattern
    const fetchTeachers = async () => {
        try {
            setLoading(true);
            
            // S·ª≠ d·ª•ng teacherService v·ªõi filter cho senior teachers
            const result = await getTeachers({ 
                page: 1, 
                perPage: 20, 
                status: 'active'
            });
            
            // Filter senior teachers (c√≥ kinh nghi·ªám >= 5 nƒÉm ho·∫∑c hire_date >= 5 nƒÉm tr∆∞·ªõc)
            const seniorTeachers = result.teachers.filter(teacher => {
                const yearsOfService = calculateYearsOfService(teacher.hireDate);
                return yearsOfService >= 5 || teacher.experience >= 5;
            });
            
            setTeachers(seniorTeachers);
        } catch (err) {
            setError('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin gi√°o vi√™n');
            console.error('Error fetching teachers:', err);
        } finally {
            setLoading(false);
        }
    };

    // Fetch statistics theo standardized API pattern
    const fetchStatistics = async () => {
        try {
            const response = await fetch(`${API_BASE_URL}/api/teachers/statistics`, {
                method: 'GET',
                headers: { 
                    'Content-Type': 'application/json'
                }
            });
            
            const result = await response.json();
            
            if (!response.ok) {
                throw new Error(result.message || 'Failed to fetch statistics');
            }
            
            setStatistics(result.data?.statistics || {});
        } catch (err) {
            console.error('Error fetching statistics:', err);
            // Set default statistics n·∫øu API ch∆∞a c√≥
            setStatistics({
                total_teachers: teachers.length || 0,
                senior_teachers: teachers.length || 0,
                avg_years_service: 7,
                success_rate: 95
            });
        }
    };

    useEffect(() => {
        fetchTeachers();
    }, []);

    useEffect(() => {
        if (teachers.length > 0) {
            fetchStatistics();
        }
    }, [teachers]);

    // Scroll functions cho horizontal navigation
    const scrollLeft = () => {
        if (gridRef.current) {
            gridRef.current.scrollBy({
                left: -400, // Scroll 400px sang tr√°i
                behavior: 'smooth'
            });
        }
    };

    const scrollRight = () => {
        if (gridRef.current) {
            gridRef.current.scrollBy({
                left: 400, // Scroll 400px sang ph·∫£i
                behavior: 'smooth'
            });
        }
    };

    // Helper functions theo teacher model structure
    const formatDate = (dateString) => {
        if (!dateString) return 'Ch∆∞a c·∫≠p nh·∫≠t';
        return new Date(dateString).toLocaleDateString('vi-VN');
    };

    const getGenderText = (gender) => {
        switch (gender) {
            case 'male': return 'Nam';
            case 'female': return 'N·ªØ';
            case 'other': return 'Kh√°c';
            default: return 'Ch∆∞a x√°c ƒë·ªãnh';
        }
    };

    const getGenderIcon = (gender) => {
        switch (gender) {
            case 'male': return 'üë®‚Äçüè´';
            case 'female': return 'üë©‚Äçüè´';
            default: return 'üë®‚Äçüè´';
        }
    };

    const calculateYearsOfService = (hireDate) => {
        if (!hireDate) return 0;
        const today = new Date();
        const hire = new Date(hireDate);
        return Math.floor((today - hire) / (365.25 * 24 * 60 * 60 * 1000));
    };

    const getStatusBadge = (status) => {
        switch (status) {
            case 'active':
                return { text: 'ƒêang ho·∫°t ƒë·ªông', class: 'status-active' };
            case 'inactive':
                return { text: 'T·∫°m ngh·ªâ', class: 'status-inactive' };
            case 'retired':
                return { text: 'ƒê√£ ngh·ªâ h∆∞u', class: 'status-retired' };
            default:
                return { text: 'Ch∆∞a x√°c ƒë·ªãnh', class: 'status-unknown' };
        }
    };

    // T√≠nh to√°n th·ªëng k√™ t·ª´ d·ªØ li·ªáu teachers
    const calculateStatistics = () => {
        const totalTeachers = teachers.length;
        const seniorTeachers = teachers.filter(t => 
            calculateYearsOfService(t.hireDate) >= 5 || t.experience >= 5
        ).length;
        
        const avgExperience = teachers.length > 0 
            ? Math.round(teachers.reduce((sum, t) => sum + (t.experience || 0), 0) / teachers.length)
            : 0;

        return {
            total_teachers: totalTeachers,
            senior_teachers: seniorTeachers,
            avg_years_service: avgExperience,
            success_rate: 95 // Static value ho·∫∑c c√≥ th·ªÉ fetch t·ª´ API kh√°c
        };
    };

    const stats = calculateStatistics();

    if (loading) {
        return (
            <div className="app-layout bg-light min-vh-100 d-flex flex-column">
                <Header />
                <main className="content bg-white border rounded p-0">
                    <div className="teacher-intro-container">
                        <div className="loading-spinner">
                            <div className="spinner"></div>
                            <p>ƒêang t·∫£i th√¥ng tin gi√°o vi√™n...</p>
                        </div>
                    </div>
                </main>
                <Footer />
            </div>
        );
    }

    return (
        <div className="app-layout bg-light min-vh-100 d-flex flex-column">
            <Header />
            <main className="content bg-white border rounded p-0">
                <div className="teacher-intro-container">
                    {/* Hero Section */}
                    <div className="teacher-hero">
                        <div className="hero-content">
                            <h1 className="hero-title">
                                <span className="hero-icon">üë®‚Äçüè´</span>
                                ƒê·ªôi Ng≈© Gi√°o Vi√™n Uy T√≠n
                            </h1>
                            <p className="hero-subtitle">
                                V·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám v√† chuy√™n m√¥n s√¢u, ƒë·ªôi ng≈© gi√°o vi√™n c·ªßa ch√∫ng t√¥i 
                                cam k·∫øt mang ƒë·∫øn ch·∫•t l∆∞·ª£ng gi·∫£ng d·∫°y t·ªët nh·∫•t cho h·ªçc vi√™n
                            </p>
                        </div>
                    </div>

                    {/* Statistics Section - Updated v·ªõi calculated stats */}
                    <div className="teacher-stats-section">
                        <div className="container">
                            <h2 className="section-title">Th·ªëng K√™ ƒê·ªôi Ng≈©</h2>
                            <div className="stats-grid">
                                <div className="stat-card">
                                    <div className="stat-icon">üë•</div>
                                    <div className="stat-content">
                                        <h3>{stats.total_teachers}+</h3>
                                        <p>Gi√°o vi√™n gi√†u kinh nghi·ªám</p>
                                    </div>
                                </div>
                                <div className="stat-card">
                                    <div className="stat-icon">‚≠ê</div>
                                    <div className="stat-content">
                                        <h3>{stats.senior_teachers}+</h3>
                                        <p>Gi√°o vi√™n th√¢m ni√™n (tr√™n 5 nƒÉm)</p>
                                    </div>
                                </div>
                                <div className="stat-card">
                                    <div className="stat-icon">üéì</div>
                                    <div className="stat-content">
                                        <h3>{stats.avg_years_service}+</h3>
                                        <p>NƒÉm kinh nghi·ªám trung b√¨nh</p>
                                    </div>
                                </div>
                                <div className="stat-card">
                                    <div className="stat-icon">üèÜ</div>
                                    <div className="stat-content">
                                        <h3>{stats.success_rate}%</h3>
                                        <p>T·ª∑ l·ªá h·ªçc vi√™n ƒë·∫°t m·ª•c ti√™u</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    {/* Teachers Showcase - Updated v·ªõi teacher model fields */}
                    <div className="teachers-showcase">
                        <div className="container">
                            <div className="showcase-header">
                                <h2 className="section-title">Gi√°o Vi√™n Th√¢m Ni√™n</h2>
                                <p className="section-subtitle">
                                    Nh·ªØng gi√°o vi√™n c√≥ nhi·ªÅu nƒÉm kinh nghi·ªám v√† th√†nh t√≠ch xu·∫•t s·∫Øc
                                </p>
                            </div>

                            {error && (
                                <div className="error-message">
                                    <span className="error-icon">‚ö†Ô∏è</span>
                                    {error}
                                </div>
                            )}

                            {teachers.length === 0 && !loading ? (
                                <div className="empty-state">
                                    <div className="empty-icon">üë®‚Äçüè´</div>
                                    <h3>ƒêang c·∫≠p nh·∫≠t th√¥ng tin gi√°o vi√™n</h3>
                                    <p>Vui l√≤ng quay l·∫°i sau ƒë·ªÉ xem th√¥ng tin chi ti·∫øt</p>
                                </div>
                            ) : (
                                <div className="teachers-container">
                                    <button 
                                        className="scroll-nav-btn prev" 
                                        onClick={scrollLeft}
                                        aria-label="Xem gi√°o vi√™n tr∆∞·ªõc"
                                    >
                                        &#8249;
                                    </button>
                                    <button 
                                        className="scroll-nav-btn next" 
                                        onClick={scrollRight}
                                        aria-label="Xem gi√°o vi√™n ti·∫øp theo"
                                    >
                                        &#8250;
                                    </button>
                                    <div className="teachers-grid" ref={gridRef}>
                                        {teachers.map((teacher) => (
                                        <div key={teacher.id} className="teacher-card">
                                            {/* Left side - Avatar */}
                                            <div className="teacher-left">
                                                <div className="teacher-avatar">
                                                    <span className="avatar-icon">
                                                        {getGenderIcon(teacher.gender)}
                                                    </span>
                                                </div>
                                                <div className="teacher-basic">
                                                    <h3 className="teacher-name">{teacher.displayName}</h3>
                                                    <p className="teacher-specialization">
                                                        {teacher.specialization || 'Chuy√™n gia TOEIC'}
                                                    </p>
                                                </div>
                                            </div>
                                            
                                            {/* Right side - Details */}
                                            <div className="teacher-right">
                                                <div className="teacher-badges">
                                                    <div className="teacher-badge">
                                                        <span className="badge-text">
                                                            {calculateYearsOfService(teacher.hireDate)} nƒÉm
                                                        </span>
                                                    </div>
                                                    <div className={`status-badge ${getStatusBadge(teacher.status).class}`}>
                                                        {getStatusBadge(teacher.status).text}
                                                    </div>
                                                </div>
                                                
                                                <div className="teacher-quick-info">
                                                    <div className="info-row">
                                                        <span className="info-item">üìÖ {teacher.experience || calculateYearsOfService(teacher.hireDate)} nƒÉm</span>
                                                        <span className="info-item">üéì {teacher.qualification || 'Ch·ª©ng ch·ªâ qu·ªëc t·∫ø'}</span>
                                                    </div>
                                                    <div className="info-row">
                                                        <span className="info-item">üë§ {getGenderText(teacher.gender)}</span>
                                                        <span className="info-item">üìç {formatDate(teacher.hireDate)}</span>
                                                    </div>
                                                </div>
                                                
                                                <div className="teacher-contact">
                                                    <div className="contact-row">
                                                        <span className="contact-item">üìß {teacher.email}</span>
                                                        <span className="contact-item">üìû {teacher.phone || 'N/A'}</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    ))}
                                    </div>
                                </div>
                            )}
                        </div>
                    </div>

                    {/* Why Choose Our Teachers */}
                    <div className="why-choose-section">
                        <div className="container">
                            <h2 className="section-title">T·∫°i Sao Ch·ªçn Gi√°o Vi√™n C·ªßa Ch√∫ng T√¥i?</h2>
                            <div className="reasons-grid">
                                <div className="reason-card">
                                    <div className="reason-icon">üéØ</div>
                                    <h3>Chuy√™n M√¥n S√¢u</h3>
                                    <p>Gi√°o vi√™n c√≥ chuy√™n m√¥n s√¢u v·ªÅ TOEIC v√† ph∆∞∆°ng ph√°p gi·∫£ng d·∫°y hi·ªáu qu·∫£</p>
                                </div>
                                <div className="reason-card">
                                    <div className="reason-icon">üìö</div>
                                    <h3>Kinh Nghi·ªám D√†y D·∫∑n</h3>
                                    <p>Nhi·ªÅu nƒÉm kinh nghi·ªám gi·∫£ng d·∫°y v√† th√†nh c√¥ng trong vi·ªác gi√∫p h·ªçc vi√™n ƒë·∫°t m·ª•c ti√™u</p>
                                </div>
                                <div className="reason-card">
                                    <div className="reason-icon">üí°</div>
                                    <h3>Ph∆∞∆°ng Ph√°p Hi·ªán ƒê·∫°i</h3>
                                    <p>√Åp d·ª•ng ph∆∞∆°ng ph√°p gi·∫£ng d·∫°y ti√™n ti·∫øn, ph√π h·ª£p v·ªõi t·ª´ng tr√¨nh ƒë·ªô h·ªçc vi√™n</p>
                                </div>
                                <div className="reason-card">
                                    <div className="reason-icon">ü§ù</div>
                                    <h3>H·ªó Tr·ª£ T·∫≠n T√¨nh</h3>
                                    <p>Lu√¥n s·∫µn s√†ng h·ªó tr·ª£ h·ªçc vi√™n ngo√†i gi·ªù h·ªçc v√† gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    {/* CTA Section */}
                    <div className="cta-section">
                        <div className="container">
                            <div className="cta-content">
                                <h2 className="cta-title">S·∫µn S√†ng B·∫Øt ƒê·∫ßu H√†nh Tr√¨nh TOEIC?</h2>
                                <p className="cta-subtitle">
                                    ƒêƒÉng k√Ω ngay ƒë·ªÉ ƒë∆∞·ª£c h·ªçc v·ªõi ƒë·ªôi ng≈© gi√°o vi√™n uy t√≠n v√† gi√†u kinh nghi·ªám
                                </p>
                                <div className="cta-buttons">
                                    <button className="btn-primary">ƒêƒÉng K√Ω Ngay</button>
                                    <button className="btn-secondary">T∆∞ V·∫•n Mi·ªÖn Ph√≠</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
            <Footer />
        </div>
    );
};

export default TeacherIntroduction;